{"ast":null,"code":"var _jsxFileName = \"D:\\\\repos\\\\saalla-next.js\\\\components\\\\ActionButton.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { joinCommunityRequest, leaveCommunityRequest } from \"../lib/users/actions\";\nimport { useRouter } from \"next/router\";\n\nfunction ActionButton(props) {\n  _s();\n\n  var router = useRouter();\n  var isJoined = props.isJoined,\n      joinCommunity = props.joinCommunity,\n      leaveCommunity = props.leaveCommunity,\n      slug = props.slug,\n      isLogged = props.isLogged;\n\n  if (!isLogged) {\n    return __jsx(Button, {\n      className: \"join_button\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return router.push(\"/giris-yap\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Kat\\u0131l\"));\n  } else {\n    return __jsx(Button, {\n      className: isJoined ? \"join_button_checked\" : \"join_button\",\n      variant: \"contained\",\n      color: isJoined ? \"default\" : \"primary\",\n      onClick: isJoined ? function () {\n        return leaveCommunity({\n          slug: slug\n        });\n      } : function () {\n        return joinCommunity({\n          slug: slug\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, isJoined ? \"Üyesin\" : \"Katıl\"));\n  }\n}\n\n_s(ActionButton, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActionButton;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    joinCommunity: function joinCommunity(payload) {\n      return dispatch(joinCommunityRequest(payload));\n    },\n    leaveCommunity: function leaveCommunity(payload) {\n      return dispatch(leaveCommunityRequest(payload));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    community: state.community.data //auth: state.auth.data,\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionButton\");","map":{"version":3,"sources":["D:/repos/saalla-next.js/components/ActionButton.jsx"],"names":["React","connect","Button","joinCommunityRequest","leaveCommunityRequest","useRouter","ActionButton","props","router","isJoined","joinCommunity","leaveCommunity","slug","isLogged","push","mapDispatchToProps","dispatch","payload","mapStateToProps","state","community","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SACEC,oBADF,EAEEC,qBAFF,QAGO,sBAHP;AAIA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAD2B,MAEnBI,QAFmB,GAEyCF,KAFzC,CAEnBE,QAFmB;AAAA,MAETC,aAFS,GAEyCH,KAFzC,CAETG,aAFS;AAAA,MAEMC,cAFN,GAEyCJ,KAFzC,CAEMI,cAFN;AAAA,MAEsBC,IAFtB,GAEyCL,KAFzC,CAEsBK,IAFtB;AAAA,MAE4BC,QAF5B,GAEyCN,KAFzC,CAE4BM,QAF5B;;AAG3B,MAAI,CAACA,QAAL,EAAe;AACb,WACE,MAAC,MAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAE;AAAA,eAAML,MAAM,CAACM,IAAP,CAAY,YAAZ,CAAN;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF;AAUD,GAXD,MAWO;AACL,WACE,MAAC,MAAD;AACE,MAAA,SAAS,EAAEL,QAAQ,GAAG,qBAAH,GAA2B,aADhD;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAEA,QAAQ,GAAG,SAAH,GAAe,SAHhC;AAIE,MAAA,OAAO,EACLA,QAAQ,GACJ;AAAA,eAAME,cAAc,CAAC;AAAEC,UAAAA,IAAI,EAAJA;AAAF,SAAD,CAApB;AAAA,OADI,GAEJ;AAAA,eAAMF,aAAa,CAAC;AAAEE,UAAAA,IAAI,EAAJA;AAAF,SAAD,CAAnB;AAAA,OAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,QAAQ,GAAG,QAAH,GAAc,OAA7B,CAVF,CADF;AAcD;AACF;;GA9BQH,Y;UACQD,S;;;KADRC,Y;;AAgCT,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCN,IAAAA,aAAa,EAAE,uBAACO,OAAD;AAAA,aAAaD,QAAQ,CAACb,oBAAoB,CAACc,OAAD,CAArB,CAArB;AAAA,KADyB;AAExCN,IAAAA,cAAc,EAAE,wBAACM,OAAD;AAAA,aAAaD,QAAQ,CAACZ,qBAAqB,CAACa,OAAD,CAAtB,CAArB;AAAA;AAFwB,GAAf;AAAA,CAA3B;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCC,IAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBC,IADO,CAElC;;AAFkC,GAAZ;AAAA,CAAxB;;AAKA,eAAepB,OAAO,CAACiB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CT,YAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  joinCommunityRequest,\r\n  leaveCommunityRequest,\r\n} from \"../lib/users/actions\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nfunction ActionButton(props) {\r\n  const router = useRouter();\r\n  const { isJoined, joinCommunity, leaveCommunity, slug, isLogged } = props;\r\n  if (!isLogged) {\r\n    return (\r\n      <Button\r\n        className=\"join_button\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => router.push(\"/giris-yap\")}\r\n      >\r\n        <span>Katıl</span>\r\n      </Button>\r\n    );\r\n  } else {\r\n    return (\r\n      <Button\r\n        className={isJoined ? \"join_button_checked\" : \"join_button\"}\r\n        variant=\"contained\"\r\n        color={isJoined ? \"default\" : \"primary\"}\r\n        onClick={\r\n          isJoined\r\n            ? () => leaveCommunity({ slug })\r\n            : () => joinCommunity({ slug })\r\n        }\r\n      >\r\n        <span>{isJoined ? \"Üyesin\" : \"Katıl\"}</span>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  joinCommunity: (payload) => dispatch(joinCommunityRequest(payload)),\r\n  leaveCommunity: (payload) => dispatch(leaveCommunityRequest(payload)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  community: state.community.data,\r\n  //auth: state.auth.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionButton);\r\n"]},"metadata":{},"sourceType":"module"}