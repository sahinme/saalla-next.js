{"ast":null,"code":"var _jsxFileName = \"D:\\\\repos\\\\saalla-next.js\\\\pages\\\\t\\\\[community].jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport { Paper } from \"@material-ui/core\";\nimport InfoCard from \"../../components/InfoCard\";\nimport MainLayout from \"../../components/mainLayout\";\nimport { getCommunityRequest, getCommunityPostsRequest } from \"../../lib/community/actions\";\nimport { joinCommunityRequest } from \"../../lib/users/actions\";\nimport ActionButton from \"../../components/ActionButton\";\nimport { votePostRequest } from \"../../lib/posts/actions\";\nimport Loader from \"../../components/Loader\";\nimport { clearStoreRequest } from \"../../lib/commonActions\";\nimport CreatePostTab from \"../../components/CreatePostTab\";\nimport { Helmet } from \"react-helmet\";\nimport SocialCard from \"../../components/SocialCard\";\nimport { parseCookies } from \"nookies\";\nimport { readLocalStorage } from \"../../lib/helpers\";\n\nfunction CommunityPage(props) {\n  const {\n    0: pageNumber,\n    1: setNumber\n  } = useState(1);\n  useEffect(() => {\n    return () => {\n      props.clearStore(\"community_posts\");\n    };\n  }, []);\n\n  const element = () => {\n    const {\n      community\n    } = props;\n    const token = readLocalStorage(\"token\");\n    const user = readLocalStorage(\"user\");\n    if (!token) return __jsx(ActionButton, {\n      isLogged: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }\n    });\n    let isJoined = false;\n    community && community.members && community.members.length > 0 && community.members.map(member => {\n      if (member.username == user.username) {\n        isJoined = true;\n      }\n    });\n    return __jsx(ActionButton, {\n      isLogged: true,\n      isJoined: isJoined,\n      slug: community.slug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const onVote = values => {\n    const {\n      votePost,\n      community\n    } = props;\n    values.page = \"community\";\n    values.cSlug = community.slug;\n    values.communityId = community.id;\n    values.pageSize = 6;\n    values.loaderStart = false;\n    votePost(values);\n  };\n\n  const fetchMoreData = () => {\n    const newNumber = pageNumber + 1;\n    const {\n      getPosts\n    } = props;\n    getPosts({\n      pageNumber: newNumber,\n      pageSize: 6,\n      slug: community.slug,\n      loaderStart: false\n    });\n    setNumber(newNumber);\n  };\n\n  const {\n    community,\n    posts\n  } = props;\n  return community && __jsx(MainLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, community.name + \" topluluÄŸu | Saalla \"), __jsx(\"meta\", {\n    name: \"description\",\n    content: community.description !== \"\" && community.description !== null && community.description.slice(0, 100),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), __jsx(Row, {\n    style: {\n      marginTop: \"4rem\",\n      height: \"240px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"com_cover_image\",\n    src: community.coverImagePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: \"com_bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    className: \"com_bar_info\",\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    className: \"profile_img\",\n    src: community.logoPath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"com_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"com_bar_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    className: \"com_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, community.name), __jsx(\"small\", {\n    className: \"com_member_count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"t/\", community.slug + \" |\"), __jsx(\"small\", {\n    className: \"com_member_count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, community && community.members && community.members.length, \"\\xDCye\")), __jsx(\"div\", {\n    className: \"join_button_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, element()))))), __jsx(Container, {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(CreatePostTab, {\n    slug: community.slug,\n    user: readLocalStorage(\"user\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    style: {\n      paddingBottom: \"10px\",\n      paddingTop: \"20px\"\n    },\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(InfiniteScroll, {\n    dataLength: posts && posts.results && posts.results.length,\n    next: fetchMoreData,\n    hasMore: posts && posts.hasNext,\n    loader: __jsx(Loader, {\n      overlay: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, posts && posts.results && posts.results.length > 0 && posts.results.map(item => __jsx(SocialCard, {\n    pageNumber: item.pageNumber,\n    key: item.id,\n    id: item.id,\n    pSlug: item.slug,\n    img: item.mediaContentPath,\n    createdDate: item.createdDateTime,\n    content: item.content,\n    contentType: item.contentType,\n    community: {\n      name: community.name,\n      slug: community.slug,\n      logoPath: community.logoPath\n    },\n    comments: item.comments,\n    user: item.user,\n    linkUrl: item.linkUrl,\n    voteCount: item.voteCount,\n    userPostVote: item.userPostVote,\n    onVote: onVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  })))), __jsx(Col, {\n    style: {\n      paddingBottom: \"10px\"\n    },\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"com_right_bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, __jsx(InfoCard, {\n    moderators: community.moderators,\n    description: community.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nCommunityPage.getInitialProps = async ctx => {\n  await ctx.store.execSagaTasks(ctx.isServer, dispatch => {\n    const {\n      community\n    } = ctx.query;\n    dispatch(getCommunityRequest({\n      slug: community,\n      loaderStart: true,\n      token: parseCookies(ctx).token\n    }));\n    dispatch(getCommunityPostsRequest({\n      pageNumber: 1,\n      pageSize: 6,\n      slug: community,\n      loaderStart: true,\n      token: parseCookies(ctx).token\n    }));\n  });\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getCommunity: payload => dispatch(getCommunityRequest(payload)),\n  joinCommunity: payload => dispatch(joinCommunityRequest(payload)),\n  votePost: payload => dispatch(votePostRequest(payload)),\n  getPosts: payload => dispatch(getCommunityPostsRequest(payload)),\n  clearStore: name => dispatch(clearStoreRequest(name))\n});\n\nconst mapStateToProps = state => ({\n  community: state.community.data,\n  posts: state.community.pagedData //auth: state.auth.data,\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunityPage);","map":{"version":3,"sources":["D:/repos/saalla-next.js/pages/t/[community].jsx"],"names":["React","useEffect","useState","Head","Row","Col","Container","InfiniteScroll","connect","Paper","InfoCard","MainLayout","getCommunityRequest","getCommunityPostsRequest","joinCommunityRequest","ActionButton","votePostRequest","Loader","clearStoreRequest","CreatePostTab","Helmet","SocialCard","parseCookies","readLocalStorage","CommunityPage","props","pageNumber","setNumber","clearStore","element","community","token","user","isJoined","members","length","map","member","username","slug","onVote","values","votePost","page","cSlug","communityId","id","pageSize","loaderStart","fetchMoreData","newNumber","getPosts","posts","name","description","slice","marginTop","height","coverImagePath","logoPath","paddingBottom","paddingTop","results","hasNext","item","mediaContentPath","createdDateTime","content","contentType","comments","linkUrl","voteCount","userPostVote","moderators","getInitialProps","ctx","store","execSagaTasks","isServer","dispatch","query","mapDispatchToProps","getCommunity","payload","joinCommunity","mapStateToProps","state","data","pagedData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { connect } from \"react-redux\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport InfoCard from \"../../components/InfoCard\";\r\nimport MainLayout from \"../../components/mainLayout\";\r\nimport {\r\n  getCommunityRequest,\r\n  getCommunityPostsRequest,\r\n} from \"../../lib/community/actions\";\r\nimport { joinCommunityRequest } from \"../../lib/users/actions\";\r\nimport ActionButton from \"../../components/ActionButton\";\r\nimport { votePostRequest } from \"../../lib/posts/actions\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { clearStoreRequest } from \"../../lib/commonActions\";\r\nimport CreatePostTab from \"../../components/CreatePostTab\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport SocialCard from \"../../components/SocialCard\";\r\nimport { parseCookies } from \"nookies\";\r\nimport { readLocalStorage } from \"../../lib/helpers\";\r\n\r\nfunction CommunityPage(props) {\r\n  const [pageNumber, setNumber] = useState(1);\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearStore(\"community_posts\");\r\n    };\r\n  }, []);\r\n\r\n  const element = () => {\r\n    const { community } = props;\r\n    const token = readLocalStorage(\"token\");\r\n    const user = readLocalStorage(\"user\");\r\n    if (!token) return <ActionButton isLogged={false} />;\r\n    let isJoined = false;\r\n    community &&\r\n      community.members &&\r\n      community.members.length > 0 &&\r\n      community.members.map((member) => {\r\n        if (member.username == user.username) {\r\n          isJoined = true;\r\n        }\r\n      });\r\n    return (\r\n      <ActionButton isLogged={true} isJoined={isJoined} slug={community.slug} />\r\n    );\r\n  };\r\n\r\n  const onVote = (values) => {\r\n    const { votePost, community } = props;\r\n    values.page = \"community\";\r\n    values.cSlug = community.slug;\r\n    values.communityId = community.id;\r\n    values.pageSize = 6;\r\n    values.loaderStart = false;\r\n    votePost(values);\r\n  };\r\n\r\n  const fetchMoreData = () => {\r\n    const newNumber = pageNumber + 1;\r\n    const { getPosts } = props;\r\n    getPosts({\r\n      pageNumber: newNumber,\r\n      pageSize: 6,\r\n      slug: community.slug,\r\n      loaderStart: false,\r\n    });\r\n    setNumber(newNumber);\r\n  };\r\n\r\n  const { community, posts } = props;\r\n  return (\r\n    community && (\r\n      <MainLayout>\r\n        <Head>\r\n          <title>{community.name + \" topluluÄŸu | Saalla \"}</title>\r\n          <meta\r\n            name=\"description\"\r\n            content={\r\n              community.description !== \"\" &&\r\n              community.description !== null &&\r\n              community.description.slice(0, 100)\r\n            }\r\n          />\r\n        </Head>\r\n        <Row style={{ marginTop: \"4rem\", height: \"240px\" }}>\r\n          <img\r\n            className=\"com_cover_image\"\r\n            src={community.coverImagePath}\r\n            alt=\"\"\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <Paper className=\"com_bar\">\r\n            <Col className=\"com_bar_info\" md={8}>\r\n              <img className=\"profile_img\" src={community.logoPath} alt=\"\" />\r\n              <div className=\"com_name\">\r\n                <div className=\"com_bar_title\">\r\n                  <h3 className=\"com_title\">{community.name}</h3>\r\n                  <small className=\"com_member_count\">\r\n                    t/{community.slug + \" |\"}\r\n                  </small>\r\n                  <small className=\"com_member_count\">\r\n                    {community && community.members && community.members.length}\r\n                    Ãœye\r\n                  </small>\r\n                </div>\r\n                <div className=\"join_button_container\">{element()}</div>\r\n              </div>\r\n            </Col>\r\n          </Paper>\r\n        </Row>\r\n        <Container style={{ marginTop: \"1rem\" }}>\r\n          <Row>\r\n            <Col xs={12} md={12}>\r\n              <CreatePostTab\r\n                slug={community.slug}\r\n                user={readLocalStorage(\"user\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginTop: \"1rem\" }}>\r\n            <Col\r\n              style={{ paddingBottom: \"10px\", paddingTop: \"20px\" }}\r\n              xs={12}\r\n              md={8}\r\n            >\r\n              <InfiniteScroll\r\n                dataLength={posts && posts.results && posts.results.length}\r\n                next={fetchMoreData}\r\n                hasMore={posts && posts.hasNext}\r\n                loader={<Loader overlay={false} />}\r\n              >\r\n                {posts &&\r\n                  posts.results &&\r\n                  posts.results.length > 0 &&\r\n                  posts.results.map((item) => (\r\n                    <SocialCard\r\n                      pageNumber={item.pageNumber}\r\n                      key={item.id}\r\n                      id={item.id}\r\n                      pSlug={item.slug}\r\n                      img={item.mediaContentPath}\r\n                      createdDate={item.createdDateTime}\r\n                      content={item.content}\r\n                      contentType={item.contentType}\r\n                      community={{\r\n                        name: community.name,\r\n                        slug: community.slug,\r\n                        logoPath: community.logoPath,\r\n                      }}\r\n                      comments={item.comments}\r\n                      user={item.user}\r\n                      linkUrl={item.linkUrl}\r\n                      voteCount={item.voteCount}\r\n                      userPostVote={item.userPostVote}\r\n                      onVote={onVote}\r\n                    />\r\n                  ))}\r\n              </InfiniteScroll>\r\n            </Col>\r\n            <Col style={{ paddingBottom: \"10px\" }} xs={12} md={4}>\r\n              <div className=\"com_right_bar\">\r\n                <InfoCard\r\n                  moderators={community.moderators}\r\n                  description={community.description}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </MainLayout>\r\n    )\r\n  );\r\n}\r\n\r\nCommunityPage.getInitialProps = async (ctx) => {\r\n  await ctx.store.execSagaTasks(ctx.isServer, (dispatch) => {\r\n    const { community } = ctx.query;\r\n    dispatch(\r\n      getCommunityRequest({\r\n        slug: community,\r\n        loaderStart: true,\r\n        token: parseCookies(ctx).token,\r\n      })\r\n    );\r\n    dispatch(\r\n      getCommunityPostsRequest({\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        slug: community,\r\n        loaderStart: true,\r\n        token: parseCookies(ctx).token,\r\n      })\r\n    );\r\n  });\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCommunity: (payload) => dispatch(getCommunityRequest(payload)),\r\n  joinCommunity: (payload) => dispatch(joinCommunityRequest(payload)),\r\n  votePost: (payload) => dispatch(votePostRequest(payload)),\r\n  getPosts: (payload) => dispatch(getCommunityPostsRequest(payload)),\r\n  clearStore: (name) => dispatch(clearStoreRequest(name)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  community: state.community.data,\r\n  posts: state.community.pagedData,\r\n  //auth: state.auth.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunityPage);\r\n"]},"metadata":{},"sourceType":"module"}