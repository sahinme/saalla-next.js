{"ast":null,"code":"import { Get } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_CATEGORIES_FAILURE, GET_CATEGORIES_REQUEST, GET_CATEGORIES_SUCCESS, GET_COMS_BY_CATEGORY_FAILURE, GET_COMS_BY_CATEGORY_REQUEST, GET_COMS_BY_CATEGORY_SUCCESS } from \"./actions\";\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\n\nfunction* getCategoriesSaga({\n  payload\n}) {\n  console.log('kategori saga da');\n\n  try {\n    yield put({\n      type: LOADER_START\n    });\n    const response = yield call(Get, \"category/get-all\", {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_CATEGORIES_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_CATEGORIES_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_CATEGORIES_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n}\n\nfunction* getComsByCategorySaga({\n  payload\n}) {\n  try {\n    const url = `category/get-communities?name=${payload.name}`;\n    yield put({\n      type: LOADER_START\n    });\n    const response = yield call(Get, url, {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_COMS_BY_CATEGORY_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_COMS_BY_CATEGORY_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_COMS_BY_CATEGORY_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n}\n\nexport default function* Saga() {\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesSaga);\n  yield takeLatest(GET_COMS_BY_CATEGORY_REQUEST, getComsByCategorySaga);\n}","map":{"version":3,"sources":["D:/repos/saalla-next.js/lib/category/sagas.js"],"names":["Get","call","put","takeLatest","GET_CATEGORIES_FAILURE","GET_CATEGORIES_REQUEST","GET_CATEGORIES_SUCCESS","GET_COMS_BY_CATEGORY_FAILURE","GET_COMS_BY_CATEGORY_REQUEST","GET_COMS_BY_CATEGORY_SUCCESS","LOADER_START","LOADER_END","getCategoriesSaga","payload","console","log","type","response","error","getComsByCategorySaga","url","name","Saga"],"mappings":"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","sourcesContent":["import { Get, } from \"../services\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  GET_CATEGORIES_FAILURE, GET_CATEGORIES_REQUEST, GET_CATEGORIES_SUCCESS, GET_COMS_BY_CATEGORY_FAILURE,\r\n  GET_COMS_BY_CATEGORY_REQUEST, GET_COMS_BY_CATEGORY_SUCCESS\r\n} from \"./actions\";\r\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\r\n\r\nfunction* getCategoriesSaga({ payload }) {\r\n  console.log('kategori saga da')\r\n  try {\r\n    yield put({ type: LOADER_START });\r\n    const response = yield call(Get, \"category/get-all\", {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_CATEGORIES_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_CATEGORIES_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_CATEGORIES_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n}\r\n\r\nfunction* getComsByCategorySaga({ payload }) {\r\n  try {\r\n    const url = `category/get-communities?name=${payload.name}`;\r\n    yield put({ type: LOADER_START });\r\n    const response = yield call(Get, url, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_COMS_BY_CATEGORY_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_COMS_BY_CATEGORY_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_COMS_BY_CATEGORY_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n}\r\n\r\n\r\nexport default function* Saga() {\r\n  yield takeLatest(GET_CATEGORIES_REQUEST, getCategoriesSaga);\r\n  yield takeLatest(GET_COMS_BY_CATEGORY_REQUEST, getComsByCategorySaga);\r\n}"]},"metadata":{},"sourceType":"module"}