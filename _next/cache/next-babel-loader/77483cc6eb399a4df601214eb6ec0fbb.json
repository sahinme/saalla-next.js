{"ast":null,"code":"import { Get, Post, PutFormData } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { UPDATE_PROFILE_FAILURE, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, GET_PROFILE_POSTS_FAILURE, GET_PROFILE_POSTS_REQUEST, GET_PROFILE_POSTS_SUCCESS, GET_PROFILE_FAILURE, GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, getProfileRequest } from './actions';\nimport { readLocalStorage } from '../helpers';\nimport { LOADER_END, LOADER_START } from \"../loader/actions\";\n\nfunction* updateProfileSaga({\n  payload\n}) {\n  try {\n    yield put({\n      type: LOADER_START\n    });\n    const user = readLocalStorage(\"user\");\n    if (!payload.gender) payload.gender = user.gender;\n    const response = yield call(PutFormData, `user/update-user`, payload, {});\n\n    if (response && !response.error) {\n      yield put({\n        type: UPDATE_PROFILE_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: UPDATE_PROFILE_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: UPDATE_PROFILE_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n\n  yield put(getProfileRequest({}));\n  yield put({\n    type: LOADER_END\n  });\n}\n\nfunction* getPostsSaga({\n  payload\n}) {\n  try {\n    yield put({\n      type: LOADER_START\n    });\n    const user = readLocalStorage(\"user\");\n    const response = yield call(Get, `post/get-user-posts?username=${user.username}`, payload, {});\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_PROFILE_POSTS_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_PROFILE_POSTS_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_PROFILE_POSTS_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n\n  yield put({\n    type: LOADER_END\n  });\n}\n\nfunction* getProfileSaga({\n  payload\n}) {\n  try {\n    yield put({\n      type: LOADER_START\n    });\n    const user = readLocalStorage(\"user\");\n    const response = yield call(Get, `user/get?username=${user.username}`, {}, {});\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_PROFILE_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_PROFILE_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_PROFILE_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n\n  yield put({\n    type: LOADER_END\n  });\n}\n\nexport default function* Saga() {\n  yield takeLatest(UPDATE_PROFILE_REQUEST, updateProfileSaga);\n  yield takeLatest(GET_PROFILE_POSTS_REQUEST, getPostsSaga);\n  yield takeLatest(GET_PROFILE_REQUEST, getProfileSaga);\n}","map":{"version":3,"sources":["D:/repos/saalla-next.js/lib/profile/sagas.js"],"names":["Get","Post","PutFormData","call","put","takeLatest","UPDATE_PROFILE_FAILURE","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","GET_PROFILE_POSTS_FAILURE","GET_PROFILE_POSTS_REQUEST","GET_PROFILE_POSTS_SUCCESS","GET_PROFILE_FAILURE","GET_PROFILE_REQUEST","GET_PROFILE_SUCCESS","getProfileRequest","readLocalStorage","LOADER_END","LOADER_START","updateProfileSaga","payload","type","user","gender","response","error","getPostsSaga","username","getProfileSaga","Saga"],"mappings":"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","sourcesContent":["import { Get, Post, PutFormData } from \"../services\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  UPDATE_PROFILE_FAILURE, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS,\r\n  GET_PROFILE_POSTS_FAILURE, GET_PROFILE_POSTS_REQUEST, GET_PROFILE_POSTS_SUCCESS,\r\n  GET_PROFILE_FAILURE, GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, getProfileRequest\r\n} from './actions';\r\nimport { readLocalStorage } from '../helpers';\r\nimport { LOADER_END, LOADER_START } from \"../loader/actions\";\r\n\r\nfunction* updateProfileSaga({ payload }) {\r\n  try {\r\n    yield put({ type: LOADER_START });\r\n    const user = readLocalStorage(\"user\");\r\n    if (!payload.gender) payload.gender = user.gender\r\n    const response = yield call(PutFormData, `user/update-user`, payload, {});\r\n    if (response && !response.error) {\r\n      yield put({ type: UPDATE_PROFILE_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: UPDATE_PROFILE_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: UPDATE_PROFILE_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n  yield put(getProfileRequest({}));\r\n  yield put({ type: LOADER_END });\r\n}\r\n\r\nfunction* getPostsSaga({ payload }) {\r\n  try {\r\n    yield put({ type: LOADER_START });\r\n    const user = readLocalStorage(\"user\");\r\n    const response = yield call(Get, `post/get-user-posts?username=${user.username}`, payload, {});\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_PROFILE_POSTS_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_PROFILE_POSTS_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_PROFILE_POSTS_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n  yield put({ type: LOADER_END });\r\n}\r\n\r\nfunction* getProfileSaga({ payload }) {\r\n  try {\r\n    yield put({ type: LOADER_START });\r\n    const user = readLocalStorage(\"user\");\r\n    const response = yield call(Get, `user/get?username=${user.username}`, {}, {});\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_PROFILE_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_PROFILE_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_PROFILE_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n  yield put({ type: LOADER_END });\r\n}\r\n\r\n\r\nexport default function* Saga() {\r\n  yield takeLatest(UPDATE_PROFILE_REQUEST, updateProfileSaga);\r\n  yield takeLatest(GET_PROFILE_POSTS_REQUEST, getPostsSaga);\r\n  yield takeLatest(GET_PROFILE_REQUEST, getProfileSaga);\r\n}"]},"metadata":{},"sourceType":"module"}