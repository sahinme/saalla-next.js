{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getUnreadsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(markAsReadSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(Saga);\n\nimport { Get, Put } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_UNREADS_FAILURE, GET_UNREADS_REQUEST, GET_UNREADS_SUCCESS, MARK_AS_READ_FAILURE, MARK_AS_READ_REQUEST, MARK_AS_READ_SUCCESS } from \"./actions\";\nimport { readLocalStorage, isLogged } from \"../helpers\";\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\n\nfunction getUnreadsSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getUnreadsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!isLogged()) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.prev = 1;\n          _context.next = 4;\n          return put({\n            type: LOADER_START\n          });\n\n        case 4:\n          _context.next = 6;\n          return call(Get, \"message/get-un-reads\", {}, {}, false);\n\n        case 6:\n          response = _context.sent;\n\n          if (!(response && !response.error)) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 10;\n          return put({\n            type: GET_UNREADS_SUCCESS,\n            payload: response.count\n          });\n\n        case 10:\n          _context.next = 12;\n          return put({\n            type: LOADER_END\n          });\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.next = 16;\n          return put({\n            type: GET_UNREADS_FAILURE,\n            payload: response\n          });\n\n        case 16:\n          _context.next = 18;\n          return put({\n            type: LOADER_END\n          });\n\n        case 18:\n          _context.next = 26;\n          break;\n\n        case 20:\n          _context.prev = 20;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 24;\n          return put({\n            type: GET_UNREADS_FAILURE,\n            payload: _context.t0\n          });\n\n        case 24:\n          _context.next = 26;\n          return put({\n            type: LOADER_END\n          });\n\n        case 26:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 20]]);\n}\n\nfunction markAsReadSaga(_ref) {\n  var payload, ids, response;\n  return _regeneratorRuntime.wrap(function markAsReadSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref.payload;\n          _context2.prev = 1;\n          ids = _toConsumableArray(payload.values);\n          _context2.next = 5;\n          return put({\n            type: LOADER_START\n          });\n\n        case 5:\n          _context2.next = 7;\n          return call(Put, \"message/mark-as-read\", ids, {}, false);\n\n        case 7:\n          response = _context2.sent;\n\n          if (!(response && !response.error)) {\n            _context2.next = 15;\n            break;\n          }\n\n          _context2.next = 11;\n          return put({\n            type: MARK_AS_READ_SUCCESS,\n            payload: response\n          });\n\n        case 11:\n          _context2.next = 13;\n          return put({\n            type: LOADER_END\n          });\n\n        case 13:\n          _context2.next = 19;\n          break;\n\n        case 15:\n          _context2.next = 17;\n          return put({\n            type: MARK_AS_READ_FAILURE,\n            payload: response\n          });\n\n        case 17:\n          _context2.next = 19;\n          return put({\n            type: LOADER_END\n          });\n\n        case 19:\n          _context2.next = 27;\n          break;\n\n        case 21:\n          _context2.prev = 21;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 25;\n          return put({\n            type: MARK_AS_READ_FAILURE,\n            payload: _context2.t0\n          });\n\n        case 25:\n          _context2.next = 27;\n          return put({\n            type: LOADER_END\n          });\n\n        case 27:\n          _context2.next = 29;\n          return put({\n            type: LOADER_END\n          });\n\n        case 29:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 21]]);\n}\n\nexport default function Saga() {\n  return _regeneratorRuntime.wrap(function Saga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(GET_UNREADS_REQUEST, getUnreadsSaga);\n\n        case 2:\n          _context3.next = 4;\n          return takeLatest(MARK_AS_READ_REQUEST, markAsReadSaga);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n_c = Saga;\n\nvar _c;\n\n$RefreshReg$(_c, \"Saga\");","map":{"version":3,"sources":["D:/repos/saalla-next.js/lib/messages/sagas.js"],"names":["getUnreadsSaga","markAsReadSaga","Saga","Get","Put","call","put","takeLatest","GET_UNREADS_FAILURE","GET_UNREADS_REQUEST","GET_UNREADS_SUCCESS","MARK_AS_READ_FAILURE","MARK_AS_READ_REQUEST","MARK_AS_READ_SUCCESS","readLocalStorage","isLogged","LOADER_START","LOADER_END","type","response","error","payload","count","ids","values"],"mappings":"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","sourcesContent":["import { Get, Put } from \"../services\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  GET_UNREADS_FAILURE, GET_UNREADS_REQUEST, GET_UNREADS_SUCCESS, MARK_AS_READ_FAILURE, MARK_AS_READ_REQUEST, MARK_AS_READ_SUCCESS\r\n} from \"./actions\";\r\nimport { readLocalStorage, isLogged } from \"../helpers\";\r\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\r\n\r\nfunction* getUnreadsSaga() {\r\n  if (isLogged()) {\r\n    try {\r\n      yield put({ type: LOADER_START });\r\n      const response = yield call(Get, `message/get-un-reads`, {}, {}, false);\r\n      if (response && !response.error) {\r\n        yield put({ type: GET_UNREADS_SUCCESS, payload: response.count });\r\n        yield put({ type: LOADER_END });\r\n      } else {\r\n        yield put({ type: GET_UNREADS_FAILURE, payload: response });\r\n        yield put({ type: LOADER_END });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: GET_UNREADS_FAILURE, payload: error });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* markAsReadSaga({ payload }) {\r\n  try {\r\n    const ids = [...payload.values];\r\n    yield put({ type: LOADER_START });\r\n    const response = yield call(Put, `message/mark-as-read`, ids, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: MARK_AS_READ_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: MARK_AS_READ_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: MARK_AS_READ_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n  yield put({ type: LOADER_END });\r\n}\r\n\r\nexport default function* Saga() {\r\n  yield takeLatest(GET_UNREADS_REQUEST, getUnreadsSaga);\r\n  yield takeLatest(MARK_AS_READ_REQUEST, markAsReadSaga);\r\n}"]},"metadata":{},"sourceType":"module"}