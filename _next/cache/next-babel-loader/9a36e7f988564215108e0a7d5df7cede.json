{"ast":null,"code":"import { Get, Post, Delete } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_PROFILE_FAILURE, GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, JOIN_COMMUNITY_REQUEST, JOIN_COMMUNITY_FAILURE, JOIN_COMMUNITY_SUCCESS, GET_USER_BY_USERNAME_FAILURE, GET_USER_BY_USERNAME_REQUEST, GET_USER_BY_USERNAME_SUCCESS, LEAVE_COMMUNITY_SUCCESS, LEAVE_COMMUNITY_FAILURE, LEAVE_COMMUNITY_REQUEST, SEND_SUGGEST_SUCCESS, SEND_SUGGEST_FAILURE, SEND_SUGGEST_REQUEST } from './actions';\nimport { readLocalStorage } from '../helpers';\nimport { getCommunityRequest } from \"../community/actions\";\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* getUserProfile({\n  payload\n}) {\n  try {\n    yield put({\n      type: LOADER_START\n    });\n    const user = readLocalStorage(\"user\");\n    const response = yield call(Get, `user/get-user/by-id?id=${user.id}`, {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_PROFILE_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_PROFILE_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_PROFILE_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n}\n\nfunction* getUserByUsernameSaga(username) {\n  try {\n    yield put({\n      type: LOADER_START\n    });\n    const response = yield call(Get, `user/get?username=${username.username}`, {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_USER_BY_USERNAME_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_USER_BY_USERNAME_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_USER_BY_USERNAME_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n}\n\nfunction* joinCommunitySaga({\n  payload\n}) {\n  try {\n    const response = yield call(Post, `user/join-community?slug=${payload.slug}`, {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: JOIN_COMMUNITY_SUCCESS,\n        payload: response\n      });\n    } else {\n      yield put({\n        type: JOIN_COMMUNITY_FAILURE,\n        payload: response\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: JOIN_COMMUNITY_FAILURE,\n      payload: error\n    });\n  }\n\n  yield put(getCommunityRequest({\n    slug: payload.slug\n  }));\n}\n\nfunction* leaveCommunitySaga({\n  payload\n}) {\n  try {\n    const userId = readLocalStorage('user').id;\n    const response = yield call(Delete, `user/leave-from-community?slug=${payload.slug}`, {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: LEAVE_COMMUNITY_SUCCESS,\n        payload: response\n      });\n    } else {\n      yield put({\n        type: LEAVE_COMMUNITY_FAILURE,\n        payload: response\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: LEAVE_COMMUNITY_FAILURE,\n      payload: error\n    });\n  }\n\n  yield put(getCommunityRequest({\n    slug: payload.slug\n  }));\n}\n\nfunction* sendSuggestSaga({\n  payload\n}) {\n  try {\n    const response = yield call(Post, `user/suggestion`, payload, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: SEND_SUGGEST_SUCCESS,\n        payload: response\n      });\n      toast.success('Teşekkürler.Önerini inceleyeceğiz');\n    } else {\n      yield put({\n        type: SEND_SUGGEST_FAILURE,\n        payload: response\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: SEND_SUGGEST_FAILURE,\n      payload: error\n    });\n  }\n}\n\nexport default function* Saga() {\n  yield takeLatest(GET_PROFILE_REQUEST, getUserProfile);\n  yield takeLatest(GET_USER_BY_USERNAME_REQUEST, getUserByUsernameSaga);\n  yield takeLatest(JOIN_COMMUNITY_REQUEST, joinCommunitySaga);\n  yield takeLatest(LEAVE_COMMUNITY_REQUEST, leaveCommunitySaga);\n  yield takeLatest(SEND_SUGGEST_REQUEST, sendSuggestSaga);\n}","map":{"version":3,"sources":["D:/repos/saalla-next.js/lib/users/sagas.js"],"names":["Get","Post","Delete","call","put","takeLatest","GET_PROFILE_FAILURE","GET_PROFILE_REQUEST","GET_PROFILE_SUCCESS","JOIN_COMMUNITY_REQUEST","JOIN_COMMUNITY_FAILURE","JOIN_COMMUNITY_SUCCESS","GET_USER_BY_USERNAME_FAILURE","GET_USER_BY_USERNAME_REQUEST","GET_USER_BY_USERNAME_SUCCESS","LEAVE_COMMUNITY_SUCCESS","LEAVE_COMMUNITY_FAILURE","LEAVE_COMMUNITY_REQUEST","SEND_SUGGEST_SUCCESS","SEND_SUGGEST_FAILURE","SEND_SUGGEST_REQUEST","readLocalStorage","getCommunityRequest","LOADER_START","LOADER_END","toast","getUserProfile","payload","type","user","response","id","error","getUserByUsernameSaga","username","joinCommunitySaga","slug","leaveCommunitySaga","userId","sendSuggestSaga","success","Saga"],"mappings":"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","sourcesContent":["import { Get, Post, Delete } from \"../services\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  GET_PROFILE_FAILURE, GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, JOIN_COMMUNITY_REQUEST, JOIN_COMMUNITY_FAILURE, JOIN_COMMUNITY_SUCCESS,\r\n  GET_USER_BY_USERNAME_FAILURE, GET_USER_BY_USERNAME_REQUEST, GET_USER_BY_USERNAME_SUCCESS, LEAVE_COMMUNITY_SUCCESS, LEAVE_COMMUNITY_FAILURE, LEAVE_COMMUNITY_REQUEST, SEND_SUGGEST_SUCCESS, SEND_SUGGEST_FAILURE, SEND_SUGGEST_REQUEST\r\n} from './actions';\r\nimport { readLocalStorage } from '../helpers';\r\nimport { getCommunityRequest } from \"../community/actions\";\r\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nfunction* getUserProfile({ payload }) {\r\n  try {\r\n    yield put({ type: LOADER_START });\r\n    const user = readLocalStorage(\"user\");\r\n    const response = yield call(Get, `user/get-user/by-id?id=${user.id}`, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_PROFILE_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_PROFILE_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_PROFILE_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n}\r\n\r\nfunction* getUserByUsernameSaga(username) {\r\n  try {\r\n    yield put({ type: LOADER_START });\r\n    const response = yield call(Get, `user/get?username=${username.username}`, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_USER_BY_USERNAME_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_USER_BY_USERNAME_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_USER_BY_USERNAME_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n}\r\n\r\nfunction* joinCommunitySaga({ payload }) {\r\n  try {\r\n    const response = yield call(Post, `user/join-community?slug=${payload.slug}`, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: JOIN_COMMUNITY_SUCCESS, payload: response });\r\n    } else {\r\n      yield put({ type: JOIN_COMMUNITY_FAILURE, payload: response });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: JOIN_COMMUNITY_FAILURE, payload: error });\r\n  }\r\n  yield put(getCommunityRequest({ slug: payload.slug }));\r\n}\r\n\r\nfunction* leaveCommunitySaga({ payload }) {\r\n  try {\r\n    const userId = readLocalStorage('user').id\r\n    const response = yield call(Delete, `user/leave-from-community?slug=${payload.slug}`, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: LEAVE_COMMUNITY_SUCCESS, payload: response });\r\n    } else {\r\n      yield put({ type: LEAVE_COMMUNITY_FAILURE, payload: response });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: LEAVE_COMMUNITY_FAILURE, payload: error });\r\n  }\r\n  yield put(getCommunityRequest({ slug: payload.slug }));\r\n}\r\n\r\nfunction* sendSuggestSaga({ payload }) {\r\n  try {\r\n    const response = yield call(Post, `user/suggestion`, payload, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: SEND_SUGGEST_SUCCESS, payload: response });\r\n      toast.success('Teşekkürler.Önerini inceleyeceğiz')\r\n    } else {\r\n      yield put({ type: SEND_SUGGEST_FAILURE, payload: response });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: SEND_SUGGEST_FAILURE, payload: error });\r\n  }\r\n}\r\n\r\n\r\nexport default function* Saga() {\r\n  yield takeLatest(GET_PROFILE_REQUEST, getUserProfile);\r\n  yield takeLatest(GET_USER_BY_USERNAME_REQUEST, getUserByUsernameSaga);\r\n  yield takeLatest(JOIN_COMMUNITY_REQUEST, joinCommunitySaga);\r\n  yield takeLatest(LEAVE_COMMUNITY_REQUEST, leaveCommunitySaga);\r\n  yield takeLatest(SEND_SUGGEST_REQUEST, sendSuggestSaga);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}