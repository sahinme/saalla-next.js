{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getConversationsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getConversationDetailSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(sendMessageSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(Saga);\n\nimport { Get, Post, PutFormData, Delete } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_CONVERSATION_DETAIL_FAILURE, GET_CONVERSATION_DETAIL_REQUEST, GET_CONVERSATION_DETAIL_SUCCESS, GET_CONVERSATIONS_FAILURE, GET_CONVERSATIONS_REQUEST, GET_CONVERSATIONS_SUCCESS, SEND_MESSAGE_SUCCESS, SEND_MESSAGE_FAILURE, SEND_MESSAGE_REQUEST, getConversationDetailRequest, getConversationsRequest } from \"./actions\";\n/* import { push } from 'react-router-redux';\r\n */\n\nimport { readLocalStorage, isLogged } from \"../helpers\";\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\n\nfunction getConversationsSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getConversationsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!isLogged()) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.prev = 1;\n          _context.next = 4;\n          return put({\n            type: LOADER_START\n          });\n\n        case 4:\n          _context.next = 6;\n          return call(Get, \"conversation/get-all\", {}, {}, false);\n\n        case 6:\n          response = _context.sent;\n\n          if (!(response && !response.error)) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 10;\n          return put({\n            type: GET_CONVERSATIONS_SUCCESS,\n            payload: response\n          });\n\n        case 10:\n          _context.next = 12;\n          return put({\n            type: LOADER_END\n          });\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.next = 16;\n          return put({\n            type: GET_CONVERSATIONS_FAILURE,\n            payload: response\n          });\n\n        case 16:\n          _context.next = 18;\n          return put({\n            type: LOADER_END\n          });\n\n        case 18:\n          _context.next = 26;\n          break;\n\n        case 20:\n          _context.prev = 20;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 24;\n          return put({\n            type: GET_CONVERSATIONS_FAILURE,\n            payload: _context.t0\n          });\n\n        case 24:\n          _context.next = 26;\n          return put({\n            type: LOADER_END\n          });\n\n        case 26:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 20]]);\n}\n\nfunction getConversationDetailSaga(_ref) {\n  var payload, user, response;\n  return _regeneratorRuntime.wrap(function getConversationDetailSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref.payload;\n          _context2.prev = 1;\n          user = readLocalStorage('user');\n          _context2.next = 5;\n          return put({\n            type: LOADER_START\n          });\n\n        case 5:\n          _context2.next = 7;\n          return call(Get, \"conversation/get/by-id?id=\".concat(payload.id), {}, {}, false);\n\n        case 7:\n          response = _context2.sent;\n\n          if (!(response && !response.error)) {\n            _context2.next = 15;\n            break;\n          }\n\n          _context2.next = 11;\n          return put({\n            type: GET_CONVERSATION_DETAIL_SUCCESS,\n            payload: response\n          });\n\n        case 11:\n          _context2.next = 13;\n          return put({\n            type: LOADER_END\n          });\n\n        case 13:\n          _context2.next = 19;\n          break;\n\n        case 15:\n          _context2.next = 17;\n          return put({\n            type: GET_CONVERSATION_DETAIL_FAILURE,\n            payload: response\n          });\n\n        case 17:\n          _context2.next = 19;\n          return put({\n            type: LOADER_END\n          });\n\n        case 19:\n          _context2.next = 27;\n          break;\n\n        case 21:\n          _context2.prev = 21;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 25;\n          return put({\n            type: GET_CONVERSATION_DETAIL_FAILURE,\n            payload: _context2.t0\n          });\n\n        case 25:\n          _context2.next = 27;\n          return put({\n            type: LOADER_END\n          });\n\n        case 27:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 21]]);\n}\n\nfunction sendMessageSaga(_ref2) {\n  var payload, tempResponseData, user, response;\n  return _regeneratorRuntime.wrap(function sendMessageSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref2.payload;\n          tempResponseData = {};\n          _context3.prev = 2;\n          user = readLocalStorage('user');\n          payload.senderId = user.id;\n          _context3.next = 7;\n          return put({\n            type: LOADER_START\n          });\n\n        case 7:\n          _context3.next = 9;\n          return call(Post, \"message/create\", payload, {}, false);\n\n        case 9:\n          response = _context3.sent;\n          tempResponseData = response;\n\n          if (!(response && !response.error)) {\n            _context3.next = 18;\n            break;\n          }\n\n          _context3.next = 14;\n          return put({\n            type: SEND_MESSAGE_SUCCESS,\n            payload: response\n          });\n\n        case 14:\n          _context3.next = 16;\n          return put({\n            type: LOADER_END\n          });\n\n        case 16:\n          _context3.next = 22;\n          break;\n\n        case 18:\n          _context3.next = 20;\n          return put({\n            type: SEND_MESSAGE_FAILURE,\n            payload: response\n          });\n\n        case 20:\n          _context3.next = 22;\n          return put({\n            type: LOADER_END\n          });\n\n        case 22:\n          _context3.next = 30;\n          break;\n\n        case 24:\n          _context3.prev = 24;\n          _context3.t0 = _context3[\"catch\"](2);\n          _context3.next = 28;\n          return put({\n            type: SEND_MESSAGE_FAILURE,\n            payload: _context3.t0\n          });\n\n        case 28:\n          _context3.next = 30;\n          return put({\n            type: LOADER_END\n          });\n\n        case 30:\n          _context3.next = 32;\n          return put(getConversationDetailRequest({\n            id: tempResponseData.conversationId\n          }));\n\n        case 32:\n          if (payload.conversationId) {\n            _context3.next = 37;\n            break;\n          }\n\n          _context3.next = 35;\n          return put(push('/chat'));\n\n        case 35:\n          _context3.next = 37;\n          return put(getConversationsRequest());\n\n        case 37:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 24]]);\n}\n\nexport default function Saga() {\n  return _regeneratorRuntime.wrap(function Saga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_CONVERSATIONS_REQUEST, getConversationsSaga);\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(GET_CONVERSATION_DETAIL_REQUEST, getConversationDetailSaga);\n\n        case 4:\n          _context4.next = 6;\n          return takeLatest(SEND_MESSAGE_REQUEST, sendMessageSaga);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n_c = Saga;\n\nvar _c;\n\n$RefreshReg$(_c, \"Saga\");","map":{"version":3,"sources":["D:/repos/saalla-next.js/lib/conversation/sagas.js"],"names":["getConversationsSaga","getConversationDetailSaga","sendMessageSaga","Saga","Get","Post","PutFormData","Delete","call","put","takeLatest","GET_CONVERSATION_DETAIL_FAILURE","GET_CONVERSATION_DETAIL_REQUEST","GET_CONVERSATION_DETAIL_SUCCESS","GET_CONVERSATIONS_FAILURE","GET_CONVERSATIONS_REQUEST","GET_CONVERSATIONS_SUCCESS","SEND_MESSAGE_SUCCESS","SEND_MESSAGE_FAILURE","SEND_MESSAGE_REQUEST","getConversationDetailRequest","getConversationsRequest","readLocalStorage","isLogged","LOADER_START","LOADER_END","type","response","error","payload","user","id","tempResponseData","senderId","conversationId","push"],"mappings":"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","sourcesContent":["import { Get, Post, PutFormData, Delete } from \"../services\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  GET_CONVERSATION_DETAIL_FAILURE, GET_CONVERSATION_DETAIL_REQUEST, GET_CONVERSATION_DETAIL_SUCCESS,\r\n  GET_CONVERSATIONS_FAILURE, GET_CONVERSATIONS_REQUEST, GET_CONVERSATIONS_SUCCESS, SEND_MESSAGE_SUCCESS, SEND_MESSAGE_FAILURE, SEND_MESSAGE_REQUEST, getConversationDetailRequest, getConversationsRequest\r\n} from \"./actions\";\r\n/* import { push } from 'react-router-redux';\r\n */import { readLocalStorage, isLogged } from \"../helpers\";\r\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\r\n\r\nfunction* getConversationsSaga() {\r\n  if (isLogged()) {\r\n    try {\r\n      yield put({ type: LOADER_START });\r\n      const response = yield call(Get, `conversation/get-all`, {}, {}, false);\r\n      if (response && !response.error) {\r\n        yield put({ type: GET_CONVERSATIONS_SUCCESS, payload: response });\r\n        yield put({ type: LOADER_END });\r\n      } else {\r\n        yield put({ type: GET_CONVERSATIONS_FAILURE, payload: response });\r\n        yield put({ type: LOADER_END });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: GET_CONVERSATIONS_FAILURE, payload: error });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* getConversationDetailSaga({ payload }) {\r\n  try {\r\n    const user = readLocalStorage('user');\r\n    yield put({ type: LOADER_START });\r\n    const response = yield call(Get, `conversation/get/by-id?id=${payload.id}`, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_CONVERSATION_DETAIL_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_CONVERSATION_DETAIL_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_CONVERSATION_DETAIL_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n}\r\n\r\nfunction* sendMessageSaga({ payload }) {\r\n  let tempResponseData = {}\r\n  try {\r\n    const user = readLocalStorage('user');\r\n    payload.senderId = user.id;\r\n    yield put({ type: LOADER_START });\r\n    const response = yield call(Post, `message/create`, payload, {}, false);\r\n    tempResponseData = response;\r\n    if (response && !response.error) {\r\n      yield put({ type: SEND_MESSAGE_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: SEND_MESSAGE_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: SEND_MESSAGE_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n  yield put(getConversationDetailRequest({ id: tempResponseData.conversationId }));\r\n  if (!payload.conversationId) {\r\n    yield put(push('/chat'));\r\n    yield put(getConversationsRequest());\r\n  }\r\n}\r\n\r\nexport default function* Saga() {\r\n  yield takeLatest(GET_CONVERSATIONS_REQUEST, getConversationsSaga);\r\n  yield takeLatest(GET_CONVERSATION_DETAIL_REQUEST, getConversationDetailSaga);\r\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessageSaga);\r\n}"]},"metadata":{},"sourceType":"module"}