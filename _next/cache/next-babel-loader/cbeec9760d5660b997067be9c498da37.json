{"ast":null,"code":"import { getSearchParams, readLocalStorage } from './helpers'; //export const API_URL = 'https://localhost:44315/api/';\n\nexport const API_URL = 'https://saalla.radinyazilim.com/api/'; //export const API_URL = 'https://saallaapi.azurewebsites.net/api/'\n\nconst contentTypes = {\n  json: 'application/json; charset=utf-8',\n  urlEncoded: 'application/x-www-form-urlencoded;charset=UTF-8',\n  isMultiPart: 'application/json; charset=utf-8'\n};\n\nconst Post = (endpoint, body = {}, token, isUrlEncoded) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n      'Authorization': `Bearer ${readLocalStorage('token')}`\n    },\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body)\n  };\n  const response = fetch(apiUrl, requestOptions).then(fetchResponse => fetchResponse.json()).catch(error => error);\n  return response;\n};\n\nconst PostFormData = (endpoint, body = {}, token) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const bodyAsFormData = new FormData();\n  Object.keys(body).forEach(key => bodyAsFormData.append(key, body[key]));\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Authorization': `Bearer ${readLocalStorage('token')}` //token,\n\n    },\n    body: bodyAsFormData\n  };\n  const response = fetch(apiUrl, requestOptions).then(fetchResponse => fetchResponse.json()).catch(error => error);\n  return response;\n};\n\nconst PutFormData = (endpoint, body = {}, token) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const bodyAsFormData = new FormData();\n  Object.keys(body).forEach(key => bodyAsFormData.append(key, body[key]));\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Authorization': `Bearer ${readLocalStorage('token')}` // token,\n\n    },\n    body: bodyAsFormData\n  };\n  const response = fetch(apiUrl, requestOptions).then(fetchResponse => fetchResponse.json()).catch(error => error);\n  return response;\n};\n\nconst Delete = (endpoint, body = {}, token, isUrlEncoded) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n      //token,\n      'Authorization': `Bearer ${readLocalStorage('token')}`\n    },\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body)\n  };\n  const response = fetch(apiUrl, requestOptions).then(response => response.json()).catch(error => error);\n  return response;\n};\n\nconst Put = (endpoint, body = {}, token, isUrlEncoded) => {\n  const apiUrl = `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n      //token,\n      'Authorization': `Bearer ${readLocalStorage('token')}`\n    },\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body)\n  };\n  const response = fetch(apiUrl, requestOptions).then(response => response.json()).catch(error => error);\n  return response;\n};\n\nconst Get = (endpoint, body = {}, token, isUrlEncoded) => {\n  console.log('get deki token', token);\n  const apiUrl = isUrlEncoded ? `${API_URL}${endpoint}${getSearchParams(body)}` : `${API_URL}${endpoint}`;\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json, text/javascript, */*; q=0.01',\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\n      //token: readLocalStorage('token'),\n      'Authorization': `Bearer ${readLocalStorage('token') || token}`\n    },\n    data: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body)\n  };\n  process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\";\n  const response = fetch(apiUrl, requestOptions).then(response => response.json()).catch(error => error);\n  return response;\n};\n\nexport { Post, Get, Put, Delete, PostFormData, PutFormData };","map":{"version":3,"sources":["D:/repos/saalla-next.js/lib/services.js"],"names":["getSearchParams","readLocalStorage","API_URL","contentTypes","json","urlEncoded","isMultiPart","Post","endpoint","body","token","isUrlEncoded","apiUrl","requestOptions","method","headers","Accept","JSON","stringify","response","fetch","then","fetchResponse","catch","error","PostFormData","bodyAsFormData","FormData","Object","keys","forEach","key","append","PutFormData","Delete","Put","Get","console","log","data","process","env","NODE_TLS_REJECT_UNAUTHORIZED"],"mappings":"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","sourcesContent":["import { getSearchParams, readLocalStorage } from './helpers';\r\n\r\n//export const API_URL = 'https://localhost:44315/api/';\r\nexport const API_URL = 'https://saalla.radinyazilim.com/api/'\r\n//export const API_URL = 'https://saallaapi.azurewebsites.net/api/'\r\n\r\nconst contentTypes = {\r\n  json: 'application/json; charset=utf-8',\r\n  urlEncoded: 'application/x-www-form-urlencoded;charset=UTF-8',\r\n  isMultiPart: 'application/json; charset=utf-8',\r\n};\r\n\r\nconst Post = (endpoint, body = {}, token, isUrlEncoded) => {\r\n  const apiUrl = `${API_URL}${endpoint}`;\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json, text/javascript, */*; q=0.01',\r\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\r\n      'Authorization': `Bearer ${readLocalStorage('token')}`\r\n    },\r\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body),\r\n  };\r\n  const response = fetch(apiUrl, requestOptions)\r\n    .then(fetchResponse => fetchResponse.json())\r\n    .catch(error => error);\r\n  return response;\r\n};\r\n\r\nconst PostFormData = (endpoint, body = {}, token) => {\r\n  const apiUrl = `${API_URL}${endpoint}`;\r\n  const bodyAsFormData = new FormData();\r\n  Object.keys(body).forEach(key => bodyAsFormData.append(key, body[key]));\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json, text/javascript, */*; q=0.01',\r\n      'Authorization': `Bearer ${readLocalStorage('token')}`\r\n      //token,\r\n    },\r\n    body: bodyAsFormData,\r\n  };\r\n  const response = fetch(apiUrl, requestOptions)\r\n    .then(fetchResponse => fetchResponse.json())\r\n    .catch(error => error);\r\n  return response;\r\n};\r\n\r\nconst PutFormData = (endpoint, body = {}, token) => {\r\n  const apiUrl = `${API_URL}${endpoint}`;\r\n  const bodyAsFormData = new FormData();\r\n  Object.keys(body).forEach(key => bodyAsFormData.append(key, body[key]));\r\n  const requestOptions = {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json, text/javascript, */*; q=0.01',\r\n      'Authorization': `Bearer ${readLocalStorage('token')}`\r\n      // token,\r\n    },\r\n    body: bodyAsFormData,\r\n\r\n  };\r\n  const response = fetch(apiUrl, requestOptions)\r\n    .then(fetchResponse => fetchResponse.json())\r\n    .catch(error => error);\r\n  return response;\r\n};\r\n\r\n\r\nconst Delete = (endpoint, body = {}, token, isUrlEncoded) => {\r\n  const apiUrl = `${API_URL}${endpoint}`;\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Accept: 'application/json, text/javascript, */*; q=0.01',\r\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\r\n      //token,\r\n      'Authorization': `Bearer ${readLocalStorage('token')}`\r\n    },\r\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body),\r\n  };\r\n  const response = fetch(apiUrl, requestOptions)\r\n    .then(response => response.json())\r\n    .catch(error => error);\r\n  return response;\r\n};\r\n\r\nconst Put = (endpoint, body = {}, token, isUrlEncoded) => {\r\n  const apiUrl = `${API_URL}${endpoint}`;\r\n  const requestOptions = {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json, text/javascript, */*; q=0.01',\r\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\r\n      //token,\r\n      'Authorization': `Bearer ${readLocalStorage('token')}`\r\n    },\r\n    body: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body),\r\n\r\n  };\r\n  const response = fetch(apiUrl, requestOptions)\r\n    .then(response => response.json())\r\n    .catch(error => error);\r\n  return response;\r\n};\r\n\r\nconst Get = (endpoint, body = {}, token, isUrlEncoded) => {\r\n  console.log('get deki token', token)\r\n  const apiUrl = isUrlEncoded\r\n    ? `${API_URL}${endpoint}${getSearchParams(body)}`\r\n    : `${API_URL}${endpoint}`;\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json, text/javascript, */*; q=0.01',\r\n      'Content-Type': isUrlEncoded ? contentTypes.urlEncoded : contentTypes.json,\r\n      //token: readLocalStorage('token'),\r\n      'Authorization': `Bearer ${readLocalStorage('token') || token}`\r\n    },\r\n    data: isUrlEncoded ? getSearchParams(body) : JSON.stringify(body),\r\n  };\r\n  process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\";\r\n  const response = fetch(apiUrl, requestOptions)\r\n    .then(response => response.json())\r\n    .catch(error => error);\r\n  return response;\r\n};\r\n\r\n\r\nexport {\r\n  Post, Get, Put, Delete,\r\n  PostFormData,\r\n  PutFormData\r\n};\r\n"]},"metadata":{},"sourceType":"module"}