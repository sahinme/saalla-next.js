{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\repos\\\\saalla-next.js\\\\pages\\\\[community]\\\\[post].jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport PopularTags from \"../../components/PopularTags\";\nimport MainLayout from \"../../components/mainLayout\";\nimport { getPostDetailRequest, votePostRequest } from \"../../lib/posts/actions\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport { htmlToText } from \"../../lib/helpers\";\nimport PostDetailCard from \"../../components/PostDetailCard\";\n\nfunction PostDetail(props) {\n  _s();\n\n  var _ref;\n\n  var router = useRouter();\n  useEffect(function () {\n    var getPostDetail = props.getPostDetail;\n    var query = router.query;\n    getPostDetail({\n      slug: query.post,\n      loaderStart: true\n    });\n  }, []);\n\n  var onVote = function onVote(values) {\n    var votePost = props.votePost;\n    values.page = \"post_detail\";\n    votePost(values);\n  };\n\n  var post = props.post;\n  return __jsx(MainLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, post && post.community && __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, post.community.name + \" salladı: \" + htmlToText(post.content) + \" | Saalla\"), post && post.community && __jsx(\"meta\", {\n    name: \"description\",\n    content: post.community.name + \" salladı: \" + htmlToText(post.content).slice(0, 100) || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), __jsx(Container, {\n    style: {\n      marginTop: \"6rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    style: {\n      paddingBottom: \"10px\",\n      paddingTop: \"20px\"\n    },\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, post && __jsx(PostDetailCard, {\n    id: post.id,\n    img: post.contentPath,\n    createdDate: post.createdDateTime,\n    content: post.content,\n    contentType: post.contentType,\n    community: post.community,\n    comments: post.comments,\n    user: post.userInfo,\n    linkUrl: post.linkUrl,\n    onVote: onVote,\n    voteCount: post.voteCount,\n    userPostVote: post.userPostVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    style: {\n      paddingBottom: \"10px\"\n    },\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: (_ref = {\n      position: \"-webkit-sticky\"\n    }, _defineProperty(_ref, \"position\", \"sticky\"), _defineProperty(_ref, \"top\", 0), _ref),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(PopularTags, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }))))));\n}\n/* PostDetail.getInitialProps = async (ctx) => {\r\n  await ctx.store.execSagaTasks(ctx.isServer, (dispatch) => {\r\n    const { post } = ctx.query;\r\n    dispatch(\r\n      getPostDetailRequest({\r\n        slug: post,\r\n        loaderStart: true,\r\n        token: parseCookies(ctx).token,\r\n      })\r\n    );\r\n  });\r\n  return {};\r\n}; */\n\n\n_s(PostDetail, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\n_c = PostDetail;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getPostDetail: function getPostDetail(payload) {\n      return dispatch(getPostDetailRequest(payload));\n    },\n    votePost: function votePost(payload) {\n      return dispatch(votePostRequest(payload));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.postDetail.data\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["D:/repos/saalla-next.js/pages/[community]/[post].jsx"],"names":["React","useEffect","useRouter","Head","Row","Col","Container","PopularTags","MainLayout","getPostDetailRequest","votePostRequest","connect","Helmet","htmlToText","PostDetailCard","PostDetail","props","router","getPostDetail","query","slug","post","loaderStart","onVote","values","votePost","page","community","name","content","slice","marginTop","paddingBottom","paddingTop","id","contentPath","createdDateTime","contentType","comments","userInfo","linkUrl","voteCount","userPostVote","position","mapDispatchToProps","dispatch","payload","mapStateToProps","state","postDetail","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport PopularTags from \"../../components/PopularTags\";\r\nimport MainLayout from \"../../components/mainLayout\";\r\nimport { getPostDetailRequest, votePostRequest } from \"../../lib/posts/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { htmlToText } from \"../../lib/helpers\";\r\nimport PostDetailCard from \"../../components/PostDetailCard\";\r\n\r\nfunction PostDetail(props) {\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    const { getPostDetail } = props;\r\n    const { query } = router;\r\n    getPostDetail({ slug: query.post, loaderStart: true });\r\n  }, []);\r\n\r\n  const onVote = (values) => {\r\n    const { votePost } = props;\r\n    values.page = \"post_detail\";\r\n    votePost(values);\r\n  };\r\n\r\n  const { post } = props;\r\n  return (\r\n    <MainLayout>\r\n      <Head>\r\n        {post && post.community && (\r\n          <title>\r\n            {post.community.name +\r\n              \" salladı: \" +\r\n              htmlToText(post.content) +\r\n              \" | Saalla\"}\r\n          </title>\r\n        )}\r\n        {post && post.community && (\r\n          <meta\r\n            name=\"description\"\r\n            content={\r\n              post.community.name +\r\n                \" salladı: \" +\r\n                htmlToText(post.content).slice(0, 100) || \"\"\r\n            }\r\n          />\r\n        )}\r\n      </Head>\r\n      <Container style={{ marginTop: \"6rem\" }}>\r\n        <Row style={{ marginTop: \"1rem\" }}>\r\n          <Col\r\n            style={{ paddingBottom: \"10px\", paddingTop: \"20px\" }}\r\n            xs={12}\r\n            md={8}\r\n          >\r\n            {post && (\r\n              <PostDetailCard\r\n                id={post.id}\r\n                img={post.contentPath}\r\n                createdDate={post.createdDateTime}\r\n                content={post.content}\r\n                contentType={post.contentType}\r\n                community={post.community}\r\n                comments={post.comments}\r\n                user={post.userInfo}\r\n                linkUrl={post.linkUrl}\r\n                onVote={onVote}\r\n                voteCount={post.voteCount}\r\n                userPostVote={post.userPostVote}\r\n              />\r\n            )}\r\n          </Col>\r\n          <Col style={{ paddingBottom: \"10px\" }} xs={12} md={4}>\r\n            <div\r\n              style={{ position: \"-webkit-sticky\", position: \"sticky\", top: 0 }}\r\n            >\r\n              <PopularTags />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\n/* PostDetail.getInitialProps = async (ctx) => {\r\n  await ctx.store.execSagaTasks(ctx.isServer, (dispatch) => {\r\n    const { post } = ctx.query;\r\n    dispatch(\r\n      getPostDetailRequest({\r\n        slug: post,\r\n        loaderStart: true,\r\n        token: parseCookies(ctx).token,\r\n      })\r\n    );\r\n  });\r\n  return {};\r\n}; */\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getPostDetail: (payload) => dispatch(getPostDetailRequest(payload)),\r\n  votePost: (payload) => dispatch(votePostRequest(payload)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.postDetail.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\r\n"]},"metadata":{},"sourceType":"module"}