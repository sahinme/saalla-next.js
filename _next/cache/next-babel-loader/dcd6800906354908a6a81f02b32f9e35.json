{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Get, Post } from \"../services\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { GET_HOME_POSTS_REQUEST, GET_HOME_POSTS_FAILURE, GET_HOME_POSTS_SUCCESS, GET_UNAUTHORIZED_POSTS_FAILURE, GET_UNAUTHORIZED_POSTS_REQUEST, GET_UNAUTHORIZED_POSTS_SUCCESS, SEARCH_FAILURE, SEARCH_REQUEST, SEARCH_SUCCESS } from './actions';\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\n\nfunction* getHomePostsSaga({\n  payload\n}) {\n  try {\n    if (payload.loaderStart) {\n      yield put({\n        type: LOADER_START\n      });\n    }\n\n    const response = yield call(Get, `post/paged-home-posts?PageNumber=${payload.pageNumber}&PageSize=${payload.pageSize}`, {}, payload.token, false);\n    console.log(response);\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_HOME_POSTS_SUCCESS,\n        payload: _objectSpread(_objectSpread({}, response), {}, {\n          isVoted: payload.isVoted\n        })\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_HOME_POSTS_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_HOME_POSTS_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n}\n\nfunction* getUnauthorizedPostsSaga({\n  payload\n}) {\n  try {\n    yield put({\n      type: payload.loderStart ? LOADER_START : LOADER_END\n    });\n    const response = yield call(Get, `post/paged-unauthorized-home-post?PageNumber=${payload.pageNumber}&PageSize=${payload.pageSize}`, {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: GET_UNAUTHORIZED_POSTS_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: GET_UNAUTHORIZED_POSTS_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_UNAUTHORIZED_POSTS_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n}\n\nfunction* searchSaga({\n  payload\n}) {\n  try {\n    yield put({\n      type: LOADER_START\n    });\n    const response = yield call(Get, `community/search?text=${payload.text}`, {}, {}, false);\n\n    if (response && !response.error) {\n      yield put({\n        type: SEARCH_SUCCESS,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    } else {\n      yield put({\n        type: SEARCH_FAILURE,\n        payload: response\n      });\n      yield put({\n        type: LOADER_END\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: SEARCH_FAILURE,\n      payload: error\n    });\n    yield put({\n      type: LOADER_END\n    });\n  }\n}\n\nexport default function* Saga() {\n  yield takeLatest(GET_HOME_POSTS_REQUEST, getHomePostsSaga);\n  yield takeLatest(GET_UNAUTHORIZED_POSTS_REQUEST, getUnauthorizedPostsSaga);\n  yield takeLatest(SEARCH_REQUEST, searchSaga);\n}","map":{"version":3,"sources":["D:/repos/saalla-next.js/lib/home/sagas.js"],"names":["Get","Post","call","put","takeLatest","GET_HOME_POSTS_REQUEST","GET_HOME_POSTS_FAILURE","GET_HOME_POSTS_SUCCESS","GET_UNAUTHORIZED_POSTS_FAILURE","GET_UNAUTHORIZED_POSTS_REQUEST","GET_UNAUTHORIZED_POSTS_SUCCESS","SEARCH_FAILURE","SEARCH_REQUEST","SEARCH_SUCCESS","LOADER_START","LOADER_END","getHomePostsSaga","payload","loaderStart","type","response","pageNumber","pageSize","token","console","log","error","isVoted","getUnauthorizedPostsSaga","loderStart","searchSaga","text","Saga"],"mappings":"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","sourcesContent":["import { Get, Post } from \"../services\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  GET_HOME_POSTS_REQUEST, GET_HOME_POSTS_FAILURE, GET_HOME_POSTS_SUCCESS,\r\n  GET_UNAUTHORIZED_POSTS_FAILURE, GET_UNAUTHORIZED_POSTS_REQUEST, GET_UNAUTHORIZED_POSTS_SUCCESS,\r\n  SEARCH_FAILURE, SEARCH_REQUEST, SEARCH_SUCCESS\r\n} from './actions';\r\nimport { LOADER_START, LOADER_END } from \"../loader/actions\";\r\n\r\nfunction* getHomePostsSaga({ payload }) {\r\n  try {\r\n    if (payload.loaderStart) {\r\n      yield put({ type: LOADER_START });\r\n\r\n    }\r\n    const response = yield call(Get, `post/paged-home-posts?PageNumber=${payload.pageNumber}&PageSize=${payload.pageSize}`, {}, payload.token, false);\r\n    console.log(response);\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_HOME_POSTS_SUCCESS, payload: { ...response, isVoted: payload.isVoted } });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_HOME_POSTS_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_HOME_POSTS_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n}\r\n\r\nfunction* getUnauthorizedPostsSaga({ payload }) {\r\n  try {\r\n    yield put({ type: payload.loderStart ? LOADER_START : LOADER_END });\r\n    const response = yield call(Get, `post/paged-unauthorized-home-post?PageNumber=${payload.pageNumber}&PageSize=${payload.pageSize}`, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: GET_UNAUTHORIZED_POSTS_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: GET_UNAUTHORIZED_POSTS_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_UNAUTHORIZED_POSTS_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n  }\r\n}\r\n\r\nfunction* searchSaga({ payload }) {\r\n  try {\r\n    yield put({ type: LOADER_START });\r\n    const response = yield call(Get, `community/search?text=${payload.text}`, {}, {}, false);\r\n    if (response && !response.error) {\r\n      yield put({ type: SEARCH_SUCCESS, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    } else {\r\n      yield put({ type: SEARCH_FAILURE, payload: response });\r\n      yield put({ type: LOADER_END });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: SEARCH_FAILURE, payload: error });\r\n    yield put({ type: LOADER_END });\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default function* Saga() {\r\n  yield takeLatest(GET_HOME_POSTS_REQUEST, getHomePostsSaga);\r\n  yield takeLatest(GET_UNAUTHORIZED_POSTS_REQUEST, getUnauthorizedPostsSaga);\r\n  yield takeLatest(SEARCH_REQUEST, searchSaga);\r\n}"]},"metadata":{},"sourceType":"module"}